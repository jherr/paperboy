// Generated by CoffeeScript 1.4.0
(function() {
  var CUSTOMER, HOST, NLPService,
    _this = this;

  HOST = 'jack-herrington.vm.lithium.com:8080';

  CUSTOMER = 1;

  NLPService = (function() {

    function NLPService() {
      var _this = this;
      this.running = {};
      this.queue = [];
      this.in_process = false;
      window.setTimeout(function() {
        return _this.update();
      }, 200);
    }

    NLPService.prototype.update_job = function(key) {
      var _this = this;
      return this.status(key, function(data) {
        if (data.status === 'complete') {
          return _this.get(key, function(data) {
            if (_this.running[key] != null) {
              _this.running[key](data);
              delete _this.running[key];
              _this.in_process = false;
              return _this.process_queue();
            }
          });
        }
      });
    };

    NLPService.prototype.update = function() {
      var key,
        _this = this;
      for (key in this.running) {
        this.update_job(key);
      }
      return window.setTimeout(function() {
        return _this.update();
      }, 200);
    };

    NLPService.prototype.process = function(text, additional_rules, callback, customer) {
      if (customer == null) {
        customer = CUSTOMER;
      }
      this.queue.push({
        text: text,
        additional_rules: additional_rules,
        callback: callback,
        customer: customer
      });
      return this.process_queue();
    };

    NLPService.prototype.process_queue = function() {
      var job;
      if (this.in_process || this.queue.length === 0) {
        return;
      }
      job = this.queue.shift();
      return this.start_job(job.text, job.additional_rules, job.callback, job.customer);
    };

    NLPService.prototype.start_job = function(text, additional_rules, callback, customer) {
      var cb,
        _this = this;
      console.log(text);
      this.in_process = true;
      cb = callback;
      return $.ajax({
        url: "http://" + HOST + "/api/v1/jobs/start",
        type: 'POST',
        data: {
          customer: customer,
          type: 'SINGLE',
          text: text,
          additional_rules: JSON.stringify(additional_rules),
          extra: null
        },
        success: function(data) {
          return _this.running[data.jobid] = callback;
        }
      });
    };

    NLPService.prototype.status = function(job_id, callback) {
      var _this = this;
      return $.ajax({
        url: "http://" + HOST + "/api/v1/jobs/status/" + job_id,
        type: 'GET',
        success: function(data) {
          return callback(data);
        }
      });
    };

    NLPService.prototype.get = function(job_id, callback) {
      var _this = this;
      return $.ajax({
        url: "http://" + HOST + "/api/v1/jobs/get/" + job_id,
        type: 'GET',
        success: function(data) {
          console.log(data);
          return callback(data);
        }
      });
    };

    return NLPService;

  })();

  window.nlp = {
    result: null,
    text: '',
    service: new NLPService(),
    rules: [],
    categories: []
  };

  window.nlp.rules = [];

  this.update_rules = function(rules) {
    console.log(rules);
    return window.nlp.rules = rules;
  };

  $.ajax({
    type: 'GET',
    url: "http://" + HOST + "/api/v1/categories",
    success: function(data) {
      return window.nlp.categories = data;
    }
  });

  this.add_rule = function(type, text, callback) {
    var _this = this;
    if (callback == null) {
      callback = null;
    }
    return $.ajax({
      type: 'POST',
      url: "http://" + HOST + "/api/v1/customers/" + CUSTOMER + "/terms",
      data: {
        terms: {
          customer_id: CUSTOMER,
          category_id: type,
          term: text
        }
      },
      success: function(data) {
        if (callback != null) {
          return callback();
        }
      }
    });
  };

  this.submit_bug = function(title, description, callback) {
    var cb;
    cb = callback;
    return $.ajax({
      type: 'POST',
      url: "http://" + HOST + "/api/v1/jira",
      data: {
        title: title,
        description: description
      },
      success: function(data) {
        return cb(data);
      }
    });
  };

  chrome.extension.onRequest.addListener(function(data, sender, response) {
    var _ref;
    if (data.type === 'selected') {
      if (sender.tab != null) {
        chrome.pageAction.show(sender.tab.id);
      }
      window.nlp.result = data.result;
      window.nlp.text = ((_ref = data.result) != null ? _ref.SNIPPET : void 0) ? data.result.SNIPPET : data.text;
    }
    if (data.type === 'nlp') {
      return window.nlp.service.process(data.text, [], function(data) {
        try {
          if (response != null) {
            return response(data);
          }
        } catch (error) {
          return console.log(error);
        }
      });
    }
  });

}).call(this);
